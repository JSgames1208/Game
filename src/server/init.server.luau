local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
require(ReplicatedStorage.Shared.network)
local CurrencyService = require(script.Services.CurrencyService)
local DataStore = require(script.Services.DataStore)
local DialogueServer = require(script.Services.DialogueServer)
local EntityService = require(ReplicatedStorage.Shared.Entity.EntityService)
require(script.Services.DialogueServer)
local InventoryServer = require(script.Services.InventoryServer)
local IslandService = require(script.Services.IslandService)
local QuestService = require(script.Services.QuestService)
local ShopService = require(script.Services.ShopService)
local TreeService = require(script.Services.TreeService)

Players.PlayerAdded:Connect(function(player: Player)
	local character = player.Character or player.CharacterAdded:Wait()
	character:WaitForChild("HumanoidRootPart"):PivotTo(CFrame.new(Vector3.new(100, 0, 0)))
	task.wait(0.2)
	DataStore.LoadPlayerData(player)
	IslandService.PlayerJoined(player)
	InventoryServer.PlayerJoined(player)
	TreeService.PlayerJoined(player)
	CurrencyService.PlayerJoined(player)
	EntityService.Start()
	QuestService.PlayerJoined(player)
	DialogueServer.Init()
	ShopService.Init()
end)

Players.PlayerRemoving:Connect(function(player: Player)
	IslandService.PlayerLeaving(player)
	InventoryServer.PlayerLeaving(player)
end)
